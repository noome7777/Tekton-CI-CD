apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gradle-build
spec:
  params:
    - name: gradle-task
      type: string
      description: Gradle task to run
      default: "build"
    - name: gradle-args
      type : string
      description: Extra args (e.g. -x test --stacktrace)
      default: "--build-cache"
    - name: project-path
      type: string
      default: "gs-spring-boot/complete"
  workspaces:
    - name: source
      description: source code
    - name: gradle-cache
      description: Gradle cache (~/.gradle)
      optional: true
  steps:
    - name: run-gradle
      image: gradle:8.7-jdk17
      workingDir: $(workspaces.source.path)/$(params.project-path)
      env:
        # gradle-cache 워크스페이스가 바인딩 되면, 그 경로를 캐시로 사용하여 빌드 속도 향상시킴
        - name : GRADLE_USER_HOME
          value: $(workspaces.gradle-cache.path)
      script: |
        #!/bin/bash
        set -euo pipefail
        
        echo "[INFO] CWD: $(pwd)"
        ls -alF
        
        # gradle-cache 워크스페이스가 실제로 마운트되어 있으면 캐시 경로로 사용
        if [ -n "$(workspaces.gradle-cache.path)" ] && [ -d "$(workspaces.gradle-cache.path)" ]; then
          export GRADLE_USER_HOME="$(workspaces.gradle-cache.path)"
          echo "[INFO] Using GRADLE_USER_HOME: $GRADLE_USER_HOME"
        else
          echo "[INFO] No gradle-cache workspace bound; using default (~/.gradle)"
        fi

        echo "[INFO] CWD: $(pwd)"
        ls -alF

        # gradlew가 있으면 래퍼 사용 (권한 보정)
        if [ -f "./gradlew" ]; then
          chmod +x ./gradlew || true
          ./gradlew --no-daemon $(params.gradle-task) $(params.gradle-args)
        else
          gradle --no-daemon $(params.gradle-task) $(params.gradle-args)
        fi